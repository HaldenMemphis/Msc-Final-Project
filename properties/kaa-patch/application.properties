kafka.send.topic=Kaa
kafka.bds.receive.topic=BloodSugarMonitor


#==========================kafka===============================================
spring.kafka.bootstrap-servers={{ kafka_hostname }}:{{ kafka_port }}
##==========================provider===========================================
# spring.kafka.producer.retries=3
# spring.kafka.producer.acks=1
##==========================consumer===========================================
#spring.kafka.consumer.group-id=kaaPatchGroup
spring.kafka.consumer.group-id=test-consumer-group

spring.kafka.consumer.auto-offset-reset=latest
spring.kafka.consumer.enable-auto-commit=true
### ms
spring.kafka.consumer.auto-commit-interval=5000
spring.kafka.listener.concurrency=6
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer


#==========================postgres============================================
spring.datasource.url=jdbc:postgresql://{{ postgres_host}}:{{ postgres_port }}/iot
spring.datasource.username={{ postgres_username }}
spring.datasource.password={{ postgres_password }}
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.type=com.zaxxer.hikari.HikariDataSource
mybatis.mapper-locations=classpath:mapper/*.xml
#==========================HikariCP============================================
#Whether to automatically commit the connection returned from the pool.
spring.datasource.hikairi.auto-commit=true
#Minimum number of connections
spring.datasource.hikairi.minimum-idle=10
#Connection timeout
spring.datasource.hikairi.connection-timeout=30000
#Maximum number of connections in the pool
spring.datasource.hikairi.maximum-pool-size=10
#The maximum lifespan of connections in the connection pool is 30 minutes.
spring.datasource.hikairi.max-lifetime=1800000
# Idle waiting time in milliseconds
spring.datasource.hikairi.idle-timeout=60000
#Connection pool name
spring.datasource.hikairi.pool-name=hikari-pool